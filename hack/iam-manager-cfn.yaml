# aws cloudformation validate-template --template-body file://template.yaml
AWSTemplateFormatVersion : 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: iam-manager template
Metadata:
  Name: iam-manager
  Version: 1.0.0
Parameters:
  DeploymentType:
    Description: Deployment type of iam-manager whether to use kiam by iam-manager or use direct instance profile
    Type: String
    AllowedValues: ["instance", "kiam"]
    Default: "instance"
    ConstraintDescription: "Must specify kiam or instance"
  ParamK8sMasterRole:
    Description: Role to be assumed in case of kiam
    Type: String
  AllowedPolicyList:
    Description: Allowed IAM policy list
    Type: CommaDelimitedList
    Default: ""
Conditions:
  CreateInstanceProfile: !Equals [!Ref DeploymentType, instance ]
  CreateIAMRole: !Equals [!Ref DeploymentType, kiam ]
Resources:
  ### Permission Boundary to be attached ####
  IAMManagerPermissionBoundary:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: "PermissionBoundary to be used by iam-manager"
      ManagedPolicyName: iam-manager-permission-boundary
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: !Ref AllowedPolicyList
            Resource: "*"
            Sid: "AllowJustThisAccess"
  ### IAM Policy to be attached to iam-manager role ###
  IAMManagerPolicy:
    Type: 'AWS::IAM::Policy'
    DependsOn: IAMManagerAccessRole
    Properties:
      PolicyName: k8s-cluster-iam-manager-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Deny
            Action:
              - "iam:DeleteRolePermissionsBoundary"
            Resource: !Ref IAMManagerPermissionBoundary
            Sid: "DenySelfPermissionBoundaryDelete"
          - Effect: "Allow"
            Action:
              - "iam:CreateRole"
            Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/k8s-*"
            Condition:
              StringEquals:
                iam:PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/iam-manager-permission-boundary"
            Sid: "AllowOnlyWithPermBoundary"
          - Effect: "Allow"
            Action:
              - "iam:AttachRolePolicy"
              - "iam:AddPermissionBoundary"
              - "iam:CreatePolicy"
              - "iam:DeletePolicy"
              - "iam:DetachRolePolicy"
              - "iam:PutRolePolicy"
              - "iam:PutRolePermissionsBoundary"
              - "iam:UpdateAssumeRolePolicy"
              - "iam:DeleteRolePolicy"
              - "iam:DeletePolicy"
              - "iam:UpdateRole"
              - "iam:DeleteRole"
              - "iam:GetRole"
              - "iam:GetRolePolicy"
              - "iam:GetPolicy"
              - "iam:ListRoles"
              - "iam:ListRolePolicies"
              - "iam:ListAttachedRolePolicies"
              - "iam:ListPolicies"
            Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/k8s-*"
            Condition:
              StringEquals:
                iam:ResourceTag/managedBy: iam-manager
            Sid: "AllowOnlyWithTag"
          - Effect: "Allow"
            Action:
              - "iam:TagRole"
              - "iam:UntagRole"
            Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/k8s-*"
            Sid: "Allow"
      Roles:
        - !Ref IAMManagerAccessRole
  ##### IAM Role to be assumed ####
  IAMManagerAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: k8s-cluster-iam-manager-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Id: "IamAssumeRole"
        Statement:
          Effect: "Allow"
          Sid: "AllowAssumeRole"
          Action: "sts:AssumeRole"
          Principal:
            AWS: !If [CreateIAMRole, !Sub "arn:aws:iam::${AWS::AccountId}:role/${ParamK8sMasterRole}", !Ref "AWS::NoValue"]
            Service: !If [CreateInstanceProfile, "ec2.amazonaws.com", !Ref "AWS::NoValue"]
      Path: "/"
  IAMManagerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: iam-manager-instance-profile
      Path: /
      Roles:
        - !Ref IAMManagerAccessRole
####### Outputs
Outputs:
  IAMManagerAccessRole:
    Description: IAM Role created for iam-manager
    Value: !GetAtt IAMManagerAccessRole.Arn